/**
 * ServerView.java
 * Class ServerView is our class for implementing the view in the MVC architecture for the server side.
 * 
 *  @version   $Id: ServerView.java,v 1.0 2013/11/26 11:20pm $
 * 
 * @author Pavan Kumar Pallerla
 * @author Eric Fortunato
 * 
 *
 */

import javax.swing.*;

public class ServerView extends javax.swing.JFrame {

    /**
     * Creates new form ClientView
     */
    public ServerView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">  
    
    /*
     * This method initializess the view
     * 
     * @params:It receives nothing
     * 
     * Returns: It returns nothing
     */
    
    private void initComponents() {

        playerNameLabel = new javax.swing.JLabel();
        selectedSideView = new javax.swing.JLabel();
        winnerLabel = new javax.swing.JLabel();
        selectedSideTextField = new javax.swing.JTextField();
        winnerTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playerNameLabel.setText("Player - II");

        selectedSideView.setText("Player-I selected");

        winnerLabel.setText("Winner");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(selectedSideView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(winnerLabel)
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(playerNameLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(selectedSideTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(winnerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(playerNameLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedSideView)
                    .addComponent(winnerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedSideTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(winnerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>
    
    /*
     * This method is the setter for the winner
     * 
     * @params: It receives an string with the winners name
     * 
     * Returns: It returns nothing
     */
    
    public void setWinner(String winner) {
    	winnerTextField.setText(winner);
    }
    
    /*
     * This method is the setter for the coin side selected
     * 
     * @params: It receives an string with the coin side
     * 
     * Returns: It returns nothing
     */
    
    public void setSelectedSide(String side) {
    	selectedSideTextField.setText(side);
    }

    // Variables declaration - do not modify                     
    private JLabel playerNameLabel;
    private JTextField selectedSideTextField;
    private JLabel selectedSideView;
    private JLabel winnerLabel;
    private JTextField winnerTextField;
    // End of variables declaration                   
}